[2020-04-24 01:53:12,287]DEBUG 11288[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,294]DEBUG 11295[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,297]DEBUG 11298[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [UPGRADE_NOWAIT]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=? for update
[2020-04-24 01:53:12,299]DEBUG 11300[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f63e24]
[2020-04-24 01:53:12,300]DEBUG 11301[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,301]DEBUG 11302[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,302]DEBUG 11303[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,303]DEBUG 11304[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,305]DEBUG 11306[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca33c24]
[2020-04-24 01:53:12,313]DEBUG 11314[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,315]DEBUG 11316[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,318]DEBUG 11319[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,320]DEBUG 11321[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [UPGRADE_SKIPLOCKED]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=? for update
[2020-04-24 01:53:12,321]DEBUG 11322[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c2e933]
[2020-04-24 01:53:12,325]DEBUG 11326[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,326]DEBUG 11327[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,327]DEBUG 11328[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,328]DEBUG 11329[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,330]DEBUG 11331[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@613a8ee1]
[2020-04-24 01:53:12,332]DEBUG 11333[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,335]DEBUG 11336[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,388]DEBUG 11389[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,398]DEBUG 11399[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [FORCE]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=? for update
[2020-04-24 01:53:12,400]DEBUG 11401[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178213b]
[2020-04-24 01:53:12,402]DEBUG 11403[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,404]DEBUG 11405[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,405]DEBUG 11406[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,409]DEBUG 11410[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,411]DEBUG 11412[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b765a2c]
[2020-04-24 01:53:12,413]DEBUG 11414[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,415]DEBUG 11416[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,419]DEBUG 11420[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,420]DEBUG 11421[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [PESSIMISTIC_READ]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=? for update
[2020-04-24 01:53:12,422]DEBUG 11423[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8e8225]
[2020-04-24 01:53:12,425]DEBUG 11426[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,426]DEBUG 11427[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,429]DEBUG 11430[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,430]DEBUG 11431[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,432]DEBUG 11433[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18920cc]
[2020-04-24 01:53:12,433]DEBUG 11434[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,435]DEBUG 11436[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,438]DEBUG 11439[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,444]DEBUG 11445[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [PESSIMISTIC_WRITE]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=? for update
[2020-04-24 01:53:12,446]DEBUG 11447[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807bdeb]
[2020-04-24 01:53:12,448]DEBUG 11449[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,449]DEBUG 11450[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,450]DEBUG 11451[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,452]DEBUG 11453[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,455]DEBUG 11456[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6492fab5]
[2020-04-24 01:53:12,460]DEBUG 11461[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,463]DEBUG 11464[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,498]DEBUG 11499[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,500]DEBUG 11501[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [PESSIMISTIC_FORCE_INCREMENT]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=? for update
[2020-04-24 01:53:12,502]DEBUG 11503[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c5529ab]
[2020-04-24 01:53:12,504]DEBUG 11505[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,516]DEBUG 11517[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,518]DEBUG 11519[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,519]DEBUG 11520[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,530]DEBUG 11531[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6722d3]
[2020-04-24 01:53:12,533]DEBUG 11534[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,538]DEBUG 11539[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,549]DEBUG 11550[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,551]DEBUG 11552[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [OPTIMISTIC]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=?
[2020-04-24 01:53:12,553]DEBUG 11554[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c532cd8]
[2020-04-24 01:53:12,560]DEBUG 11561[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,561]DEBUG 11562[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,562]DEBUG 11563[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,564]DEBUG 11565[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,566]DEBUG 11567[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51972dc7]
[2020-04-24 01:53:12,569]DEBUG 11570[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,576]DEBUG 11577[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,578]DEBUG 11579[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(entity=entidade.Telefone)
    - Returns
       - EntityReturnImpl(entity=entidade.Telefone, querySpaceUid=<gen:0>, path=entidade.Telefone)
          - EntityAttributeFetchImpl(entity=entidade.Usuario, querySpaceUid=<gen:1>, path=entidade.Telefone.usuario)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entidade.Telefone)
          - SQL table alias mapping - telefone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[2020-04-24 01:53:12,580]DEBUG 11581[main] - org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:146) - Static select for entity entidade.Telefone [OPTIMISTIC_FORCE_INCREMENT]: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=?
[2020-04-24 01:53:12,582]DEBUG 11583[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity entidade.Telefone: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=?
[2020-04-24 01:53:12,585]DEBUG 11586[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity entidade.Telefone: select telefone0_.id as id1_0_0_, telefone0_.ddd as ddd2_0_0_, telefone0_.numero as numero3_0_0_, telefone0_.tipo as tipo4_0_0_, telefone0_.id_email as id_email5_0_0_ from TELEFONE telefone0_ where telefone0_.id=?
[2020-04-24 01:53:12,631]DEBUG 11632[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e821657]
[2020-04-24 01:53:12,633]DEBUG 11634[main] - org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:177) - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d131e1b]
[2020-04-24 01:53:12,641]DEBUG 11642[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : ddd
[2020-04-24 01:53:12,642]DEBUG 11643[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : numero
[2020-04-24 01:53:12,645]DEBUG 11646[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : tipo
[2020-04-24 01:53:12,645]DEBUG 11646[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154) - Visiting attribute path : usuario
[2020-04-24 01:53:12,646]DEBUG 11647[main] - org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:162) - Property path deemed to be circular : usuario
[2020-04-24 01:53:12,648]DEBUG 11649[main] - org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:86) - Building LoadPlan...
[2020-04-24 01:53:12,666]DEBUG 11667[main] - org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:111) - processing queryspace <gen:0>
[2020-04-24 01:53:12,671]DEBUG 11672[main] - org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:86) - LoadPlan(collection=entidade.Usuario.telefones)
    - Returns
       - CollectionReturnImpl(collection=entidade.Usuario.telefones, querySpaceUid=<gen:0>, path=[entidade.Usuario.telefones])
          - (collection element) CollectionFetchableElementEntityGraph(entity=entidade.Telefone, querySpaceUid=<gen:1>, path=[entidade.Usuario.telefones].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=entidade.Usuario.telefones)
          - SQL table alias mapping - telefones0_
          - alias suffix - 0_
          - suffixed key columns - {id_email5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entidade.Telefone)
                - SQL table alias mapping - telefones0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[2020-04-24 01:53:12,677]DEBUG 11678[main] - org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:114) - Static select for collection entidade.Usuario.telefones: select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:13,805]DEBUG 12806[main] - org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:67) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@77a7cf58
[2020-04-24 01:53:13,813]DEBUG 12814[main] - org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:89) - Registering SessionFactory: f9758548-756d-4534-b2d4-2245fb41223d (<unnamed>)
[2020-04-24 01:53:13,815]DEBUG 12816[main] - org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:96) - Not binding SessionFactory to JNDI, no JNDI name configured
[2020-04-24 01:53:13,816]DEBUG 12817[main] - org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:503) - Instantiated session factory
[2020-04-24 01:53:13,819]DEBUG 12820[main] - org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:155) - Checking 0 named HQL queries
[2020-04-24 01:53:13,821]DEBUG 12822[main] - org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171) - Checking 0 named SQL queries
[2020-04-24 01:53:13,855]DEBUG 12856[main] - org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
[2020-04-24 01:53:13,913]DEBUG 12914[main] - org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$Generation.execute(JpaSchemaGenerator.java:115) - No actions specified; doing nothing
[2020-04-24 01:53:14,227]DEBUG 13228[main] - org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:56) - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@45e37a7e
[2020-04-24 01:53:14,228]DEBUG 13229[main] - org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:66) - Registering EntityManagerFactory: sefaz 
[2020-04-24 01:53:14,647]DEBUG 13648[main] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: from entidade.Usuario u
[2020-04-24 01:53:14,691]DEBUG 13692[main] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'entidade'
             |  \-[IDENT] Node: 'Usuario'
             \-[ALIAS] Node: 'u'

[2020-04-24 01:53:14,692]DEBUG 13693[main] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2020-04-24 01:53:14,895]DEBUG 13896[main] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2020-04-24 01:53:15,133]DEBUG 14134[main] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : entidade.Usuario (u) -> usuario0_
[2020-04-24 01:53:15,136]DEBUG 14137[main] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2020-04-24 01:53:15,138]DEBUG 14139[main] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:664) - processQuery() :  ( SELECT ( FromClause{level=1} USUARIO usuario0_ ) )
[2020-04-24 01:53:15,169]DEBUG 14170[main] - org.hibernate.hql.internal.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:933) - Derived SELECT clause created.
[2020-04-24 01:53:15,229]DEBUG 14230[main] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [USUARIO usuario0_]
[2020-04-24 01:53:15,231]DEBUG 14232[main] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2020-04-24 01:53:15,241]DEBUG 14242[main] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USUARIO)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'usuario0_.email as email1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=USUARIO,tableAlias=usuario0_,origin=null,columns={,className=entidade.Usuario}}}
    |  \-[SQL_TOKEN] SqlFragment: 'usuario0_.nome as nome2_1_, usuario0_.senha as senha3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[usuario0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'USUARIO usuario0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=USUARIO,tableAlias=usuario0_,origin=null,columns={,className=entidade.Usuario}}

[2020-04-24 01:53:15,243]DEBUG 14244[main] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2020-04-24 01:53:15,488]DEBUG 14489[main] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: from entidade.Usuario u
[2020-04-24 01:53:15,490]DEBUG 14491[main] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select usuario0_.email as email1_1_, usuario0_.nome as nome2_1_, usuario0_.senha as senha3_1_ from USUARIO usuario0_
[2020-04-24 01:53:15,491]DEBUG 14492[main] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2020-04-24 01:53:15,708]DEBUG 14709[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select usuario0_.email as email1_1_, usuario0_.nome as nome2_1_, usuario0_.senha as senha3_1_ from USUARIO usuario0_
[2020-04-24 01:53:15,711]DEBUG 14712[main] - org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:226) - Obtaining JDBC connection
[2020-04-24 01:53:15,713]DEBUG 14714[main] - org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:232) - Obtained JDBC connection
[2020-04-24 01:53:15,907]DEBUG 14908[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 0
[2020-04-24 01:53:16,054]DEBUG 15055[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#admin@com]
[2020-04-24 01:53:16,104]DEBUG 15105[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 1
[2020-04-24 01:53:16,117]DEBUG 15118[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#fabio@com]
[2020-04-24 01:53:16,120]DEBUG 15121[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 2
[2020-04-24 01:53:16,123]DEBUG 15124[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#fulano@com]
[2020-04-24 01:53:16,128]DEBUG 15129[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 3
[2020-04-24 01:53:16,130]DEBUG 15131[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#rurik@com]
[2020-04-24 01:53:16,132]DEBUG 15133[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 4
[2020-04-24 01:53:16,134]DEBUG 15135[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#rurikn123123j@com]
[2020-04-24 01:53:16,140]DEBUG 15141[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 5
[2020-04-24 01:53:16,142]DEBUG 15143[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#rurikn3434j@com]
[2020-04-24 01:53:16,144]DEBUG 15145[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 6
[2020-04-24 01:53:16,145]DEBUG 15146[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#rurikn55555j@com]
[2020-04-24 01:53:16,147]DEBUG 15148[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 7
[2020-04-24 01:53:16,149]DEBUG 15150[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#ruriknj@com]
[2020-04-24 01:53:16,151]DEBUG 15152[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 8
[2020-04-24 01:53:16,157]DEBUG 15158[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#teresinha@com]
[2020-04-24 01:53:16,188]DEBUG 15189[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 9
[2020-04-24 01:53:16,190]DEBUG 15191[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#teste111@com]
[2020-04-24 01:53:16,192]DEBUG 15193[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 10
[2020-04-24 01:53:16,194]DEBUG 15195[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#teste12@com]
[2020-04-24 01:53:16,197]DEBUG 15198[main] - org.hibernate.loader.Loader.processResultSet(Loader.java:951) - Result set row: 11
[2020-04-24 01:53:16,198]DEBUG 15199[main] - org.hibernate.loader.Loader.getRow(Loader.java:1485) - Result row: EntityKey[entidade.Usuario#teste@com.br]
[2020-04-24 01:53:16,282]DEBUG 15283[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#admin@com]
[2020-04-24 01:53:16,357]DEBUG 15358[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#admin@com]
[2020-04-24 01:53:16,426]DEBUG 15427[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#fabio@com]
[2020-04-24 01:53:16,430]DEBUG 15431[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#fabio@com]
[2020-04-24 01:53:16,434]DEBUG 15435[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#fulano@com]
[2020-04-24 01:53:16,441]DEBUG 15442[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#fulano@com]
[2020-04-24 01:53:16,443]DEBUG 15444[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#rurik@com]
[2020-04-24 01:53:16,445]DEBUG 15446[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#rurik@com]
[2020-04-24 01:53:16,446]DEBUG 15447[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#rurikn123123j@com]
[2020-04-24 01:53:16,448]DEBUG 15449[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#rurikn123123j@com]
[2020-04-24 01:53:16,449]DEBUG 15450[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#rurikn3434j@com]
[2020-04-24 01:53:16,455]DEBUG 15456[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#rurikn3434j@com]
[2020-04-24 01:53:16,457]DEBUG 15458[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#rurikn55555j@com]
[2020-04-24 01:53:16,459]DEBUG 15460[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#rurikn55555j@com]
[2020-04-24 01:53:16,461]DEBUG 15462[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#ruriknj@com]
[2020-04-24 01:53:16,463]DEBUG 15464[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#ruriknj@com]
[2020-04-24 01:53:16,745]DEBUG 15746[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#teresinha@com]
[2020-04-24 01:53:16,746]DEBUG 15747[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#teresinha@com]
[2020-04-24 01:53:16,748]DEBUG 15749[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#teste111@com]
[2020-04-24 01:53:16,920]DEBUG 15921[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#teste111@com]
[2020-04-24 01:53:17,392]DEBUG 16393[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#teste12@com]
[2020-04-24 01:53:17,397]DEBUG 16398[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#teste12@com]
[2020-04-24 01:53:17,588]DEBUG 16589[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Usuario#teste@com.br]
[2020-04-24 01:53:17,591]DEBUG 16592[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Usuario#teste@com.br]
[2020-04-24 01:53:17,620]DEBUG 16621[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#admin@com]
[2020-04-24 01:53:17,623]DEBUG 16624[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:17,842]DEBUG 16843[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#admin@com]
[2020-04-24 01:53:17,867]DEBUG 16868[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:18,087]DEBUG 17088[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#admin@com]
[2020-04-24 01:53:18,100]DEBUG 17101[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#25]
[2020-04-24 01:53:18,104]DEBUG 17105[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#25]
[2020-04-24 01:53:18,107]DEBUG 17108[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:18,291]DEBUG 17292[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#admin@com]
[2020-04-24 01:53:18,292]DEBUG 17293[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:18,295]DEBUG 17296[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:18,297]DEBUG 17298[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#fabio@com]
[2020-04-24 01:53:18,300]DEBUG 17301[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:18,304]DEBUG 17305[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#fabio@com]
[2020-04-24 01:53:18,306]DEBUG 17307[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:18,308]DEBUG 17309[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#fabio@com]
[2020-04-24 01:53:18,310]DEBUG 17311[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#21]
[2020-04-24 01:53:18,313]DEBUG 17314[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#21]
[2020-04-24 01:53:18,315]DEBUG 17316[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:18,320]DEBUG 17321[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#fabio@com]
[2020-04-24 01:53:18,322]DEBUG 17323[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:18,328]DEBUG 17329[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:18,331]DEBUG 17332[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#fulano@com]
[2020-04-24 01:53:18,332]DEBUG 17333[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:18,336]DEBUG 17337[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#fulano@com]
[2020-04-24 01:53:18,338]DEBUG 17339[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:18,340]DEBUG 17341[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#fulano@com]
[2020-04-24 01:53:18,626]DEBUG 17627[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #1
[2020-04-24 01:53:18,629]DEBUG 17630[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#fulano@com]
[2020-04-24 01:53:18,631]DEBUG 17632[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#32]
[2020-04-24 01:53:18,634]DEBUG 17635[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#32]
[2020-04-24 01:53:18,637]DEBUG 17638[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#33]
[2020-04-24 01:53:18,639]DEBUG 17640[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#33]
[2020-04-24 01:53:18,641]DEBUG 17642[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:18,643]DEBUG 17644[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#fulano@com]
[2020-04-24 01:53:18,644]DEBUG 17645[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:18,645]DEBUG 17646[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:18,646]DEBUG 17647[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#rurik@com]
[2020-04-24 01:53:18,648]DEBUG 17649[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:18,654]DEBUG 17655[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#rurik@com]
[2020-04-24 01:53:18,655]DEBUG 17656[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:18,658]DEBUG 17659[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#rurik@com]
[2020-04-24 01:53:18,660]DEBUG 17661[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #1
[2020-04-24 01:53:18,664]DEBUG 17665[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#rurik@com]
[2020-04-24 01:53:18,667]DEBUG 17668[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#1]
[2020-04-24 01:53:18,694]DEBUG 17695[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#1]
[2020-04-24 01:53:18,712]DEBUG 17713[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#20]
[2020-04-24 01:53:18,714]DEBUG 17715[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#20]
[2020-04-24 01:53:18,717]DEBUG 17718[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,103]DEBUG 18104[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#rurik@com]
[2020-04-24 01:53:19,106]DEBUG 18107[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,108]DEBUG 18109[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:19,110]DEBUG 18111[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#rurikn123123j@com]
[2020-04-24 01:53:19,111]DEBUG 18112[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:19,119]DEBUG 18120[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#rurikn123123j@com]
[2020-04-24 01:53:19,125]DEBUG 18126[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:19,189]DEBUG 18190[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#rurikn123123j@com]
[2020-04-24 01:53:19,322]DEBUG 18323[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#27]
[2020-04-24 01:53:19,326]DEBUG 18327[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#27]
[2020-04-24 01:53:19,328]DEBUG 18329[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,330]DEBUG 18331[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#rurikn123123j@com]
[2020-04-24 01:53:19,331]DEBUG 18332[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,334]DEBUG 18335[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:19,337]DEBUG 18338[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#rurikn3434j@com]
[2020-04-24 01:53:19,338]DEBUG 18339[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:19,342]DEBUG 18343[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#rurikn3434j@com]
[2020-04-24 01:53:19,541]DEBUG 18542[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:19,545]DEBUG 18546[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#rurikn3434j@com]
[2020-04-24 01:53:19,548]DEBUG 18549[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#29]
[2020-04-24 01:53:19,577]DEBUG 18578[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#29]
[2020-04-24 01:53:19,653]DEBUG 18654[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,657]DEBUG 18658[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#rurikn3434j@com]
[2020-04-24 01:53:19,658]DEBUG 18659[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,660]DEBUG 18661[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:19,662]DEBUG 18663[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#rurikn55555j@com]
[2020-04-24 01:53:19,664]DEBUG 18665[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:19,669]DEBUG 18670[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#rurikn55555j@com]
[2020-04-24 01:53:19,671]DEBUG 18672[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:19,674]DEBUG 18675[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#rurikn55555j@com]
[2020-04-24 01:53:19,677]DEBUG 18678[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#28]
[2020-04-24 01:53:19,679]DEBUG 18680[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#28]
[2020-04-24 01:53:19,701]DEBUG 18702[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,703]DEBUG 18704[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#rurikn55555j@com]
[2020-04-24 01:53:19,705]DEBUG 18706[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,706]DEBUG 18707[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:19,874]DEBUG 18875[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#ruriknj@com]
[2020-04-24 01:53:19,876]DEBUG 18877[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:19,878]DEBUG 18879[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#ruriknj@com]
[2020-04-24 01:53:19,880]DEBUG 18881[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:19,884]DEBUG 18885[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#ruriknj@com]
[2020-04-24 01:53:19,908]DEBUG 18909[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#7]
[2020-04-24 01:53:19,912]DEBUG 18913[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#7]
[2020-04-24 01:53:19,914]DEBUG 18915[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,917]DEBUG 18918[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#ruriknj@com]
[2020-04-24 01:53:19,918]DEBUG 18919[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:19,920]DEBUG 18921[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:19,922]DEBUG 18923[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#teresinha@com]
[2020-04-24 01:53:19,923]DEBUG 18924[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:19,967]DEBUG 18968[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#teresinha@com]
[2020-04-24 01:53:19,970]DEBUG 18971[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:19,974]DEBUG 18975[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#teresinha@com]
[2020-04-24 01:53:19,985]DEBUG 18986[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #1
[2020-04-24 01:53:19,990]DEBUG 18991[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#teresinha@com]
[2020-04-24 01:53:20,041]DEBUG 19042[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#9]
[2020-04-24 01:53:20,042]DEBUG 19043[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#9]
[2020-04-24 01:53:20,044]DEBUG 19045[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#10]
[2020-04-24 01:53:20,045]DEBUG 19046[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#10]
[2020-04-24 01:53:20,137]DEBUG 19138[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,139]DEBUG 19140[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#teresinha@com]
[2020-04-24 01:53:20,141]DEBUG 19142[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,142]DEBUG 19143[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:20,145]DEBUG 19146[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#teste111@com]
[2020-04-24 01:53:20,151]DEBUG 19152[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:20,154]DEBUG 19155[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#teste111@com]
[2020-04-24 01:53:20,156]DEBUG 19157[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:20,158]DEBUG 19159[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#teste111@com]
[2020-04-24 01:53:20,160]DEBUG 19161[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#24]
[2020-04-24 01:53:20,162]DEBUG 19163[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#24]
[2020-04-24 01:53:20,163]DEBUG 19164[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,165]DEBUG 19166[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#teste111@com]
[2020-04-24 01:53:20,167]DEBUG 19168[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,171]DEBUG 19172[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:20,174]DEBUG 19175[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#teste12@com]
[2020-04-24 01:53:20,176]DEBUG 19177[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:20,379]DEBUG 19380[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#teste12@com]
[2020-04-24 01:53:20,383]DEBUG 19384[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:20,386]DEBUG 19387[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#teste12@com]
[2020-04-24 01:53:20,388]DEBUG 19389[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#23]
[2020-04-24 01:53:20,390]DEBUG 19391[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#23]
[2020-04-24 01:53:20,391]DEBUG 19392[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,393]DEBUG 19394[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#teste12@com]
[2020-04-24 01:53:20,394]DEBUG 19395[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,396]DEBUG 19397[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 01:53:20,404]DEBUG 19405[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:90) - Loading collection: [entidade.Usuario.telefones#teste@com.br]
[2020-04-24 01:53:20,406]DEBUG 19407[main] - org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:109) - select telefones0_.id_email as id_email5_1_0_, telefones0_.id as id1_0_0_, telefones0_.id as id1_0_1_, telefones0_.ddd as ddd2_0_1_, telefones0_.numero as numero3_0_1_, telefones0_.tipo as tipo4_0_1_, telefones0_.id_email as id_email5_0_1_ from TELEFONE telefones0_ where telefones0_.id_email=?
[2020-04-24 01:53:20,425]DEBUG 19426[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.handlePotentiallyEmptyCollectionRootReturns(ResultSetProcessorImpl.java:168) - Preparing collection intializer : [entidade.Usuario.telefones#teste@com.br]
[2020-04-24 01:53:20,427]DEBUG 19428[main] - org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:127) - Starting ResultSet row #0
[2020-04-24 01:53:20,471]DEBUG 19472[main] - org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(CollectionReferenceInitializerImpl.java:77) - Found row of collection: [entidade.Usuario.telefones#teste@com.br]
[2020-04-24 01:53:20,475]DEBUG 19476[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:160) - Resolving associations for [entidade.Telefone#26]
[2020-04-24 01:53:20,478]DEBUG 19479[main] - org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:286) - Done materializing entity [entidade.Telefone#26]
[2020-04-24 01:53:20,490]DEBUG 19491[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:232) - 1 collections were found in result set for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,493]DEBUG 19494[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:280) - Collection fully initialized: [entidade.Usuario.telefones#teste@com.br]
[2020-04-24 01:53:20,495]DEBUG 19496[main] - org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:240) - 1 collections initialized for role: entidade.Usuario.telefones
[2020-04-24 01:53:20,722]DEBUG 19723[main] - org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:120) - Done loading collection
[2020-04-24 09:33:32,837]DEBUG     1[main] - org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:53) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2020-04-24 09:33:32,977] WARN   141[main] - org.hibernate.ejb.HibernatePersistence.logDeprecation(HibernatePersistence.java:58) - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
[2020-04-24 09:33:32,989] WARN   153[main] - org.hibernate.ejb.HibernatePersistence.logDeprecation(HibernatePersistence.java:58) - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
[2020-04-24 09:33:32,991] WARN   155[main] - org.hibernate.ejb.HibernatePersistence.logDeprecation(HibernatePersistence.java:58) - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
[2020-04-24 09:33:33,040]DEBUG   204[main] - org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:139) - Incoming config yielded no classloaders; adding standard SE ones
[2020-04-24 09:33:33,689]DEBUG   853[main] - org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:102) - Located and parsed 1 persistence units; checking each
[2020-04-24 09:33:33,691]DEBUG   855[main] - org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:110) - Checking persistence-unit [name=sefaz, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [sefaz]
[2020-04-24 09:33:33,696]DEBUG   860[main] - org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:106) - Persistence-unit [sefaz] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[2020-04-24 09:33:33,775]DEBUG   939[main] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:117) - PersistenceUnitInfo [
	name: sefaz
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SEFAZ/ProjetoSefaz/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entidade.Usuario
		entidade.Telefone]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.hsqldb.jdbcDriver
		HibernatePersistenceProvider.format_sql: true
		javax.persistence.jdbc.password: 
		HibernatePersistenceProvider.show_sql: true
		HibernatePersistenceProvider.dialect: org.hibernate.dialect.HSQLDialect
		javax.persistence.jdbc.url: jdbc:hsqldb:file:D:/banco/sefaz1;hsqldb.lock_file=false;shutdown = true; hsqldb.write_delay = false;
		javax.persistence.jdbc.user: sa]
[2020-04-24 09:33:33,922]DEBUG  1086[main] - org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:63) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2020-04-24 09:33:33,939]DEBUG  1103[main] - org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:63) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2020-04-24 09:33:33,951]DEBUG  1115[main] - org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:63) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2020-04-24 09:33:33,954]DEBUG  1118[main] - org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:63) - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2020-04-24 09:33:34,192]DEBUG  1356[main] - org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:79) - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
[2020-04-24 09:33:34,197]DEBUG  1361[main] - org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:79) - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
[2020-04-24 09:33:34,537] INFO  1701[main] - org.hibernate.Version.logVersion(Version.java:54) - HHH000412: Hibernate Core {4.3.0.Final}
[2020-04-24 09:33:34,554] INFO  1718[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
[2020-04-24 09:33:34,564] INFO  1728[main] - org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:346) - HHH000021: Bytecode provider name : javassist
[2020-04-24 09:33:35,447]DEBUG  2611[main] - org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:85) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2020-04-24 09:33:35,591]DEBUG  2755[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration boolean -> org.hibernate.type.BooleanType@1786f9d5
[2020-04-24 09:33:35,593]DEBUG  2757[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration boolean -> org.hibernate.type.BooleanType@1786f9d5
[2020-04-24 09:33:35,596]DEBUG  2760[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1786f9d5
[2020-04-24 09:33:35,603]DEBUG  2767[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3578436e
[2020-04-24 09:33:35,610]DEBUG  2774[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d1b0d2a
[2020-04-24 09:33:35,616]DEBUG  2780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration yes_no -> org.hibernate.type.YesNoType@710726a3
[2020-04-24 09:33:35,623]DEBUG  2787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration byte -> org.hibernate.type.ByteType@548ad73b
[2020-04-24 09:33:35,625]DEBUG  2789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration byte -> org.hibernate.type.ByteType@548ad73b
[2020-04-24 09:33:35,626]DEBUG  2790[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@548ad73b
[2020-04-24 09:33:35,634]DEBUG  2798[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration character -> org.hibernate.type.CharacterType@24a35978
[2020-04-24 09:33:35,636]DEBUG  2800[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration char -> org.hibernate.type.CharacterType@24a35978
[2020-04-24 09:33:35,637]DEBUG  2801[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24a35978
[2020-04-24 09:33:35,645]DEBUG  2809[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration short -> org.hibernate.type.ShortType@5579bb86
[2020-04-24 09:33:35,648]DEBUG  2812[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration short -> org.hibernate.type.ShortType@5579bb86
[2020-04-24 09:33:35,649]DEBUG  2813[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5579bb86
[2020-04-24 09:33:35,656]DEBUG  2820[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration integer -> org.hibernate.type.IntegerType@5d11346a
[2020-04-24 09:33:35,657]DEBUG  2821[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration int -> org.hibernate.type.IntegerType@5d11346a
[2020-04-24 09:33:35,659]DEBUG  2823[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d11346a
[2020-04-24 09:33:35,671]DEBUG  2835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration long -> org.hibernate.type.LongType@6dde5c8c
[2020-04-24 09:33:35,675]DEBUG  2839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration long -> org.hibernate.type.LongType@6dde5c8c
[2020-04-24 09:33:35,679]DEBUG  2843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6dde5c8c
[2020-04-24 09:33:35,703]DEBUG  2867[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration float -> org.hibernate.type.FloatType@587c290d
[2020-04-24 09:33:35,706]DEBUG  2870[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration float -> org.hibernate.type.FloatType@587c290d
[2020-04-24 09:33:35,709]DEBUG  2873[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@587c290d
[2020-04-24 09:33:35,753]DEBUG  2917[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration double -> org.hibernate.type.DoubleType@44a3ec6b
[2020-04-24 09:33:35,756]DEBUG  2920[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration double -> org.hibernate.type.DoubleType@44a3ec6b
[2020-04-24 09:33:35,764]DEBUG  2928[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44a3ec6b
[2020-04-24 09:33:35,806]DEBUG  2970[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f8f5f62
[2020-04-24 09:33:35,809]DEBUG  2973[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f8f5f62
[2020-04-24 09:33:35,887]DEBUG  3051[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6483f5ae
[2020-04-24 09:33:35,892]DEBUG  3056[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6483f5ae
[2020-04-24 09:33:35,917]DEBUG  3081[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration string -> org.hibernate.type.StringType@5427c60c
[2020-04-24 09:33:35,920]DEBUG  3084[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.String -> org.hibernate.type.StringType@5427c60c
[2020-04-24 09:33:35,938]DEBUG  3102[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6366ebe0
[2020-04-24 09:33:35,952]DEBUG  3116[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69379752
[2020-04-24 09:33:35,967]DEBUG  3131[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration url -> org.hibernate.type.UrlType@4f51b3e0
[2020-04-24 09:33:35,970]DEBUG  3134[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4f51b3e0
[2020-04-24 09:33:36,002]DEBUG  3166[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration date -> org.hibernate.type.DateType@2473b9ce
[2020-04-24 09:33:36,005]DEBUG  3169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2473b9ce
[2020-04-24 09:33:36,025]DEBUG  3189[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration time -> org.hibernate.type.TimeType@6c9f5c0d
[2020-04-24 09:33:36,033]DEBUG  3197[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c9f5c0d
[2020-04-24 09:33:36,051]DEBUG  3215[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2a40cd94
[2020-04-24 09:33:36,059]DEBUG  3223[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2a40cd94
[2020-04-24 09:33:36,066]DEBUG  3230[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2a40cd94
[2020-04-24 09:33:36,083]DEBUG  3247[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58a90037
[2020-04-24 09:33:36,106]DEBUG  3270[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration calendar -> org.hibernate.type.CalendarType@101df177
[2020-04-24 09:33:36,114]DEBUG  3278[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@101df177
[2020-04-24 09:33:36,117]DEBUG  3281[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@101df177
[2020-04-24 09:33:36,125]DEBUG  3289[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@276438c9
[2020-04-24 09:33:36,143]DEBUG  3307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration locale -> org.hibernate.type.LocaleType@6e2c9341
[2020-04-24 09:33:36,173]DEBUG  3337[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6e2c9341
[2020-04-24 09:33:36,188]DEBUG  3352[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration currency -> org.hibernate.type.CurrencyType@76a4d6c
[2020-04-24 09:33:36,192]DEBUG  3356[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@76a4d6c
[2020-04-24 09:33:36,206]DEBUG  3370[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d6da883
[2020-04-24 09:33:36,212]DEBUG  3376[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d6da883
[2020-04-24 09:33:36,221]DEBUG  3385[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration class -> org.hibernate.type.ClassType@12028586
[2020-04-24 09:33:36,223]DEBUG  3387[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12028586
[2020-04-24 09:33:36,240]DEBUG  3404[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@365c30cc
[2020-04-24 09:33:36,247]DEBUG  3411[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@365c30cc
[2020-04-24 09:33:36,254]DEBUG  3418[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@282003e1
[2020-04-24 09:33:36,269]DEBUG  3433[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4df828d7
[2020-04-24 09:33:36,282]DEBUG  3446[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration binary -> org.hibernate.type.BinaryType@3e77a1ed
[2020-04-24 09:33:36,289]DEBUG  3453[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e77a1ed
[2020-04-24 09:33:36,291]DEBUG  3455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration [B -> org.hibernate.type.BinaryType@3e77a1ed
[2020-04-24 09:33:36,306]DEBUG  3470[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3444d69d
[2020-04-24 09:33:36,308]DEBUG  3472[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3444d69d
[2020-04-24 09:33:36,317]DEBUG  3481[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3444d69d
[2020-04-24 09:33:36,325]DEBUG  3489[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration image -> org.hibernate.type.ImageType@21a947fe
[2020-04-24 09:33:36,334]DEBUG  3498[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration characters -> org.hibernate.type.CharArrayType@6c3f5566
[2020-04-24 09:33:36,336]DEBUG  3500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c3f5566
[2020-04-24 09:33:36,338]DEBUG  3502[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration [C -> org.hibernate.type.CharArrayType@6c3f5566
[2020-04-24 09:33:36,347]DEBUG  3511[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@453da22c
[2020-04-24 09:33:36,348]DEBUG  3512[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@453da22c
[2020-04-24 09:33:36,349]DEBUG  3513[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@453da22c
[2020-04-24 09:33:36,353]DEBUG  3517[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration text -> org.hibernate.type.TextType@1c72da34
[2020-04-24 09:33:36,359]DEBUG  3523[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration ntext -> org.hibernate.type.NTextType@64d7f7e0
[2020-04-24 09:33:36,401]DEBUG  3565[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration blob -> org.hibernate.type.BlobType@7364985f
[2020-04-24 09:33:36,404]DEBUG  3568[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7364985f
[2020-04-24 09:33:36,408]DEBUG  3572[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3d36e4cd
[2020-04-24 09:33:36,555]DEBUG  3719[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration clob -> org.hibernate.type.ClobType@255b53dc
[2020-04-24 09:33:36,557]DEBUG  3721[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@255b53dc
[2020-04-24 09:33:36,588]DEBUG  3752[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration nclob -> org.hibernate.type.NClobType@c540f5a
[2020-04-24 09:33:36,590]DEBUG  3754[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c540f5a
[2020-04-24 09:33:36,595]DEBUG  3759[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d826d77
[2020-04-24 09:33:36,601]DEBUG  3765[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@448ff1a8
[2020-04-24 09:33:36,613]DEBUG  3777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration serializable -> org.hibernate.type.SerializableType@6328d34a
[2020-04-24 09:33:36,639]DEBUG  3803[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration object -> org.hibernate.type.ObjectType@6ee12bac
[2020-04-24 09:33:36,641]DEBUG  3805[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6ee12bac
[2020-04-24 09:33:36,654]DEBUG  3818[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@400cff1a
[2020-04-24 09:33:36,656]DEBUG  3820[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@275710fc
[2020-04-24 09:33:36,657]DEBUG  3821[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525f1e4e
[2020-04-24 09:33:36,661]DEBUG  3825[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@75f9eccc
[2020-04-24 09:33:36,663]DEBUG  3827[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@52aa2946
[2020-04-24 09:33:36,665]DEBUG  3829[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4de5031f
[2020-04-24 09:33:36,666]DEBUG  3830[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@67e2d983
[2020-04-24 09:33:36,669]DEBUG  3833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:146) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d47c63f
[2020-04-24 09:33:36,827] INFO  3991[main] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
[2020-04-24 09:33:36,935]DEBUG  4099[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2020-04-24 09:33:36,939]DEBUG  4103[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2020-04-24 09:33:36,947]DEBUG  4111[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2020-04-24 09:33:36,949]DEBUG  4113[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2020-04-24 09:33:36,962]DEBUG  4126[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2020-04-24 09:33:36,968]DEBUG  4132[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2020-04-24 09:33:36,985]DEBUG  4149[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2020-04-24 09:33:36,991]DEBUG  4155[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2020-04-24 09:33:36,999]DEBUG  4163[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2020-04-24 09:33:37,007]DEBUG  4171[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2020-04-24 09:33:37,020]DEBUG  4184[main] - org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
